# ############################################################################ #
#
#  AMReX Configuration File
#  To import into other CMake projects
#
# ############################################################################ #
@PACKAGE_INIT@

# Set the minimum CMake version required
cmake_minimum_required(VERSION @CMAKE_MINIMUM_REQUIRED_VERSION@)

# Provides find_dependency
include(CMakeFindDependencyMacro)

#
# Build type
#
set(AMReX_BUILD_TYPE  @CMAKE_BUILD_TYPE@)

#
# Versioning
#
set(AMReX_GIT_VERSION \"@AMREX_GIT_VERSION@\")

#
# Add AMReX modules to app code CMake
#
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "@CMAKE_INSTALL_PREFIX@/Tools/CMake/")

#
# AMReX CMake modules PATH
#
set(AMReX_MODULES_PATH @CMAKE_INSTALL_PREFIX@/Tools/CMake)

#
# Path to amrex typechecker command
#
set(AMReX_TYPECHECKER "@CMAKE_INSTALL_PREFIX@/Tools/typechecker/typechecker.py")

#
# Configuration options
# Each option is treated like a "component" so that find_package can be easily
# used to check weather the option is enabled
#

# General options
set(AMReX_@DIM@D_FOUND                  ON)
set(AMReX_MPI_FOUND                 @ENABLE_MPI@)
set(AMReX_OMP_FOUND                 @ENABLE_OMP@)
set(AMReX_CUDA_FOUND                @ENABLE_CUDA@)
set(AMReX_DPCPP_FOUND               @ENABLE_DPCPP@)
set(AMReX_DP_FOUND                  @ENABLE_DP@)

# Actual components selection
set(AMReX_EB_FOUND                  @ENABLE_EB@)
set(AMReX_FINTERFACES_FOUND         @ENABLE_FORTRAN_INTERFACES@)
set(AMReX_LSOLVERS_FOUND            @ENABLE_LINEAR_SOLVERS@)
set(AMReX_AMRDATA_FOUND             @ENABLE_AMRDATA@)
set(AMReX_PARTICLES_FOUND           @ENABLE_PARTICLES@)
set(AMReX_DPARTICLES_FOUND          @ENABLE_DP_PARTICLES@)
set(AMReX_SENSEI_FOUND              @ENABLE_SENSEI_INSITU@)
set(AMReX_CONDUIT_FOUND             @ENABLE_CONDUIT@)
set(AMReX_SUNDIALS_FOUND            @ENABLE_SUNDIALS@)
set(AMReX_ASCENT_FOUND              @ENABLE_ASCENT@)
set(AMReX_HYPRE_FOUND               @ENABLE_HYPRE@)

# Compilation options
set(AMReX_FPE_FOUND                 @ENABLE_FPE@)
set(AMReX_PIC_FOUND                 @ENABLE_PIC@)
set(AMReX_ASSERTIONS_FOUND          @ENABLE_ASSERTIONS@)

# Profiling options
set(AMReX_BASEP_FOUND               @ENABLE_BASE_PROFILE@)
set(AMReX_TINYP_FOUND               @ENABLE_TINY_PROFILE@)
set(AMReX_TRACEP_FOUND              @ENABLE_TRACE_PROFILE@)
set(AMReX_MEMP_FOUND                @ENABLE_MEM_PROFILE@)
set(AMReX_COMMP_FOUND               @ENABLE_COMM_PROFILE@)
set(AMReX_PROFPARSER_FOUND          @ENABLE_PROFPARSER@)

#
# Find dependencies if needed
#
set( THREADS_PREFER_PTHREAD_FLAG on)
find_dependency(Threads REQUIRED)

if (@ENABLE_MPI@)
   set( _mpi_components C CXX )
   if (@ENABLE_FORTRAN_INTERFACES@)
      list(APPEND _mpi_components Fortran)
   endif ()
   find_dependency(MPI REQUIRED ${_mpi_components})
   unset(_mpi_components)
endif()

if (@ENABLE_OMP@)
   set( _omp_components CXX )
   if (@ENABLE_FORTRAN_INTERFACES@ OR @ENABLE_HYPRE@)
      list(APPEND _omp_components Fortran)
   endif ()
   find_dependency(OpenMP REQUIRED ${_omp_components})
endif ()


if (@ENABLE_SUNDIALS@)
   find_dependency(SUNDIALS 4 COMPONENTS nvecserial cvode arkode REQUIRED )
endif ()

if (@ENABLE_SENSEI_INSITU@)
   find_dependency(SENSEI REQUIRED)
endif ()

if (@ENABLE_CONDUIT@)
   find_dependency(Conduit REQUIRED)
   if (@ENABLE_ASCENT@)
      find_dependency(Ascent REQUIRED)
   endif ()
endif ()

if (@ENABLE_HYPRE@)
   find_dependency(HYPRE 2.15 REQUIRED)
endif ()

#
# CUDA
#
if (@ENABLE_CUDA@)
   include(AMReX_SetupCUDA)
endif ()


#include("${CMAKE_CURRENT_LIST_DIR}/@targets_export_name@.cmake")
include( "${CMAKE_CURRENT_LIST_DIR}/AMReXTargets.cmake" )

#
# Check components
#
check_required_components("@PROJECT_NAME@")
#check_required_components(AMReX)
