# Sam Williams's HPGMG

  include $(HPGMG_DIR)/source/Make.package
  DEFINES += -DUSEHPGMG=1 -DUSE_MPI=1

# use a unique MPI subcommunicator for each level of the multigrid?
  ifeq ($(HPGMG_USE_SUBCOMM), TRUE)
    DEFINES += -DUSE_SUBCOMM=1
  endif

# which bottom solver?
  ifeq ($(HPGMG_BOTTOM_SOLVER), BICGSTAB)
    DEFINES += -DUSE_BICGSTAB=1
  else ifeq ($(HPGMG_BOTTOM_SOLVER), CG)
    DEFINES += -DUSE_CG=1
  else ifeq ($(HPGMG_BOTTOM_SOLVER), CABICGSTAB)
    DEFINES += -DUSE_CABICGSTAB=1
  else
    DEFINES += -DUSE_BICGSTAB=1
  endif

# which smoothing method?
  ifeq ($(HPGMG_SMOOTHER), GSRB)
    DEFINES += -DUSE_GSRB=1
    # HPGMG has several different ways to apply the GSRB smooths
    ifeq ($(HPGMG_GSRB_TYPE), STRIDE2)
      DEFINES += -DGSRB_STRIDE2=1
    else ifeq ($(HPGMG_GSRB_TYPE), FP)
      DEFINES += -DGSRB_FP=1
    else ifeq ($(HPGMG_GSRB_TYPE), BRANCH)
      DEFINES += -DGSRB_BRANCH=1
    else
      DEFINES += -DGSRB_STRIDE2=1
    endif
    ifeq ($(HPGMG_GSRB_OOP), TRUE)
      DEFINES += -DGSRB_OOP=1
    endif
  else ifeq ($(HPGMG_SMOOTHER), CHEBY)
    DEFINES += -DUSE_CHEBY=1
  else ifeq ($(HPGMG_SMOOTHER), JACOBI)
    DEFINES += -DUSE_JACOBI=1
  else ifeq ($(HPGMG_SMOOTHER), L1JACOBI)
    DEFINES += -DUSE_L1JACOBI=1
  else
   DEFINES += -DUSE_GSRB=1
  endif

  DEFINES += -DHPGMG_F_CYCLES=$(HPGMG_F_CYCLES)
  DEFINES += -DHPGMG_V_CYCLES=$(HPGMG_V_CYCLES)

# is this a Helmholtz problem or a Poisson problem?
  ifeq ($(HPGMG_HELMHOLTZ), TRUE)
    DEFINES += -DUSE_HELMHOLTZ=1
  endif

# the constant-coefficient stencil requires significantly less data movement during the calculation
  ifeq ($(HPGMG_STENCIL_VARIABLE_COEFFICIENT), TRUE)
    DEFINES += -DSTENCIL_VARIABLE_COEFFICIENT=1
  endif

  include $(HPGMG_DIR)/source/Make.package
  include $(AMREX_HOME)/Src/Extern/hpgmg/Make.package
  INCLUDE_LOCATIONS += $(HPGMG_DIR)/source
  VPATH_LOCATIONS   += $(HPGMG_DIR)/source
