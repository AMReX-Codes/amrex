#
# For Summit et al. at OLCF
#

OLCF_MACHINES := summitdev summit ascent peak

ifneq ($(which_computer), $(findstring $(which_computer), $(OLCF_MACHINES)))
  $(error Unknown OLCF computer, $(which_computer))
endif



ifeq ($(which_computer),$(filter $(which_computer),summitdev))

  ifeq ($(USE_MPI),TRUE)

    CC  := mpicc
    CXX := mpicxx
    FC  := mpifort
    F90 := mpifort

    LIBRARIES += -lmpi_ibm_mpifh -lmpi_ibm

  endif

  ifeq ($(lowercase_comp),gnu)
    override XTRALIBS := -lgfortran
  endif

  ifeq ($(lowercase_comp),ibm)
    override XTRALIBS += -L$(OLCF_XLF_ROOT)/lib -L$(OLCF_XLC_ROOT)/lib
  endif

  # If the cuda module is loaded, CUDAPATH is set as the toolkit location.

  SYSTEM_CUDA_PATH=$(CUDAPATH)

  SYSTEM_NVML_PATH=/usr/lib64/nvidia

  # Specify that we want to build for Pascal

  CUDA_ARCH = 60
  COMPILE_CUDA_PATH = $(OLCF_CUDA_ROOT)

  # Provide system configuration information.

  GPUS_PER_NODE=4
  GPUS_PER_SOCKET=2

endif



ifeq ($(which_computer),$(filter $(which_computer),summit ascent peak))

  ifeq ($(USE_MPI),TRUE)

    CC  := mpicc
    CXX := mpicxx
    FC  := mpif90
    F90 := mpif90

    LIBRARIES += -lmpi_ibm_mpifh -lmpi_ibm

  endif

  ifeq ($(lowercase_comp),gnu)
    override XTRALIBS := -lgfortran
  endif

  ifeq ($(lowercase_comp),ibm)
    override XTRALIBS += -L$(OLCF_XLF_ROOT)/lib -L$(OLCF_XLC_ROOT)/lib
  endif

  SYSTEM_CUDA_PATH=$(OLCF_CUDA_ROOT)

  SYSTEM_NVML_PATH=$(OLCF_CUDA_ROOT)/lib64/stubs

  # Specify that we want to build for Volta

  CUDA_ARCH = 70
  COMPILE_CUDA_PATH = $(OLCF_CUDA_ROOT)

  # Provide system configuration information.

  GPUS_PER_NODE=6
  GPUS_PER_SOCKET=3

endif
