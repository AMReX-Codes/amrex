#
# For titan at OLCF
#

OLCF_MACHINES := titan summitdev summit ascent

ifneq ($(which_computer), $(findstring $(which_computer), $(OLCF_MACHINES)))
  $(error Unknown OLCF computer, $(which_computer))
endif

ifeq ($(which_computer),$(filter $(which_computer),titan))

  ifdef PE_ENV
    lowercase_peenv := $(shell echo $(PE_ENV) | tr A-Z a-z)
    ifneq ($(lowercase_peenv),$(lowercase_comp))
      has_compiler_mismatch = COMP=$(COMP) does not match PrgEnv-$(lowercase_peenv)
    endif
  endif

  ifeq ($(USE_MPI),TRUE)
    CC  = cc
    CXX = CC
    FC  = ftn
    F90 = ftn
    LIBRARIES += -lmpichf90
  endif

  # If the cudatoolkit module is loaded, CRAY_CUDATOOLKIT_DIR is set as the toolkit location.

  SYSTEM_CUDA_PATH=$(CRAY_CUDATOOLKIT_DIR)

  # Specify that we want to build for Kepler

  CUDA_ARCH = 35
  COMPILE_CUDA_PATH=$(CRAY_CUDATOOLKIT_DIR)

  # Provide system configuration information.

  GPUS_PER_NODE=1
  GPUS_PER_SOCKET=1

endif



ifeq ($(which_computer),$(filter $(which_computer),summitdev))

  ifeq ($(USE_MPI),TRUE)

    CC  := mpicc
    CXX := mpicxx
    FC  := mpifort
    F90 := mpifort

    LIBRARIES += -lmpi_ibm_mpifh -lmpi_ibm

  endif

  ifeq ($(lowercase_comp),gnu)
    override XTRALIBS := -lgfortran
  endif

  ifeq ($(lowercase_comp),ibm)
    override XTRALIBS += -L$(OLCF_XLF_ROOT)/lib -L$(OLCF_XLC_ROOT)/lib
  endif

  # If the cuda module is loaded, CUDAPATH is set as the toolkit location.

  SYSTEM_CUDA_PATH=$(CUDAPATH)

  SYSTEM_NVML_PATH=/usr/lib64/nvidia

  # Specify that we want to build for Pascal

  CUDA_ARCH = 60
  COMPILE_CUDA_PATH = $(OLCF_CUDA_ROOT)

  # Provide system configuration information.

  GPUS_PER_NODE=4
  GPUS_PER_SOCKET=2

ifeq ($(USE_OMP_OFFLOAD),TRUE)
  GENERIC_IBM_FLAGS += -qsmp=omp:noauto -qoffload -qtgtarch=sm_60
endif

endif



ifeq ($(which_computer),$(filter $(which_computer),summit))

  ifeq ($(USE_MPI),TRUE)

    CC  := mpicc
    CXX := mpicxx
    FC  := mpif90
    F90 := mpif90

    LIBRARIES += -lmpi_ibm_mpifh -lmpi_ibm

  endif

  ifeq ($(lowercase_comp),gnu)
    override XTRALIBS := -lgfortran
  endif

  ifeq ($(lowercase_comp),ibm)
    override XTRALIBS += -L$(OLCF_XLF_ROOT)/lib -L$(OLCF_XLC_ROOT)/lib
  endif

  # If the cuda module is loaded, CUDAPATH is set as the toolkit location.

  SYSTEM_CUDA_PATH=$(CUDAPATH)

  SYSTEM_NVML_PATH=/usr/lib64/nvidia

  # Specify that we want to build for Volta

  CUDA_ARCH = 70
  COMPILE_CUDA_PATH = $(OLCF_CUDA_ROOT)

  # Provide system configuration information.

  GPUS_PER_NODE=6
  GPUS_PER_SOCKET=3

ifeq ($(USE_OMP_OFFLOAD),TRUE)
  GENERIC_IBM_FLAGS += -qsmp=omp:noauto -qoffload -qtgtarch=sm_70
endif

endif


ifeq ($(which_computer),$(filter $(which_computer),ascent))

  ifeq ($(USE_MPI),TRUE)

    CC  := mpicc
    CXX := mpicxx
    FC  := mpif90
    F90 := mpif90

    LIBRARIES += -lmpi_ibm_mpifh -lmpi_ibm

  endif

  ifeq ($(lowercase_comp),gnu)
    override XTRALIBS := -lgfortran
  endif

  ifeq ($(lowercase_comp),ibm)
    override XTRALIBS += -L$(OLCF_XLF_ROOT)/lib -L$(OLCF_XLC_ROOT)/lib
  endif

  # If the cuda module is loaded, CUDAPATH is set as the toolkit location.

  SYSTEM_CUDA_PATH=$(CUDAPATH)

  SYSTEM_NVML_PATH=/usr/lib64/nvidia

  # Specify that we want to build for Volta

  CUDA_ARCH = 70
  COMPILE_CUDA_PATH = $(OLCF_CUDA_ROOT)

  # Provide system configuration information.

  GPUS_PER_NODE=6
  GPUS_PER_SOCKET=3

ifeq ($(USE_OMP_OFFLOAD),TRUE)
  GENERIC_IBM_FLAGS += -qsmp=omp:noauto -qoffload -qtgtarch=sm_70
endif

   CPATH=/autofs/nccsopen-svm1_sw/ascent/.swci/1-compute/opt/spack/20180914/linux-rhel7-ppc64le/pgi-18.7/spectrum-mpi-10.2.0.7-20180830-d6ufwv3i4tohn6fq552fpz6au5ik33ok/include:/sw/ascent/cuda/9.1.85/include

endif
