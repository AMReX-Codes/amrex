#
# Generic setup mainly for MPI stuff
#

os_type := $(shell uname)

ifneq ($(MAKECMDGOALS),realclean)
ifneq ($(MAKECMDGOALS),clean)
ifneq ($(MAKECMDGOALS),uninstall)
ifneq ($(MAKECMDGOALS),distclean)
ifneq ($(NO_MPI_CHECKING),TRUE)
ifeq ($(USE_MPI),TRUE)

  CXX := mpicxx
  CC  := mpicc
  FC  := mpif90
  F90 := mpif90

  ifeq ($(LINK_WITH_FORTRAN_COMPILER),TRUE)
    MPI_OTHER_COMP := mpicxx
  else
    MPI_OTHER_COMP := mpif90
  endif

  # Link to MPI f90 library.
  ifneq ($(findstring mpich,$(shell $(MPI_OTHER_COMP) -show 2>&1 | tr A-Z a-z)),)

    #
    # mpich
    #

#    ifneq ($(BL_NO_FORT),TRUE)
      mpif90_link_flags := $(shell $(MPI_OTHER_COMP) -link_info)
      #
      # The first word is the underlying compiler say gfortran
      #
      LIBRARIES += $(wordlist 2,1024,$(mpif90_link_flags))
#    endif

#    ifneq ($(CXX),$(filter $(CXX),mpicxx mpic++))
      mpicxx_link_flags := $(shell mpicxx -link_info)
      LIBRARIES += $(filter -l%,$(mpicxx_link_flags))
#    endif

  else ifneq ($(findstring mvapich,$(shell $(MPI_OTHER_COMP) -show 2>&1 | tr A-Z a-z)),)

    #
    # mvapich
    #

#    ifneq ($(BL_NO_FORT),TRUE)
      mpif90_link_flags := $(shell $(MPI_OTHER_COMP) -link_info)
      #
      # The first word is the underlying compiler say gfortran
      #
      LIBRARIES += $(wordlist 2,1024,$(mpif90_link_flags))
#    endif

#    ifneq ($(CXX),$(filter $(CXX),mpicxx mpic++))
      mpicxx_link_flags := $(shell mpicxx -link_info)
      LIBRARIES += $(filter -l%,$(mpicxx_link_flags))
#    endif

  else ifneq ($(findstring Open MPI, $(shell $(MPI_OTHER_COMP) -showme:version 2>&1)),)

    #
    # openmpi
    #

#    ifneq ($(BL_NO_FORT),TRUE)
      mpif90_link_flags := $(shell $(MPI_OTHER_COMP) -showme:link)
      LIBRARIES += $(mpif90_link_flags)
#    endif

#    ifneq ($(CXX),$(filter $(CXX),mpicxx mpic++))
      mpicxx_link_flags := $(shell mpicxx -showme:link)
      LIBRARIES += $(filter -l%,$(mpicxx_link_flags))
#    endif

     DEFINES += -DOMPI_SKIP_MPICXX

  else ifneq ($(findstring Spectrum MPI, $(shell $(MPI_OTHER_COMP) -showme:version 2>&1)),)

    #
    # Spectrum MPI
    #
#    ifneq ($(BL_NO_FORT),TRUE)
      mpif90_link_flags := $(shell $(MPI_OTHER_COMP) -showme:link)
      LIBRARIES += $(mpif90_link_flags)
#    endif

  else ifneq ($(findstring /intel/mpi-rt,$(shell $(MPI_OTHER_COMP) -show 2>&1)),)

    #
    # Intel mpi
    #
#
#    ifneq ($(BL_NO_FORT),TRUE)
      mpif90_link_flags := $(shell $(MPI_OTHER_COMP) -link_info)
      #
      # The first word is the underlying compiler say gfortran
      #
      LIBRARIES += $(wordlist 2,1024,$(mpif90_link_flags))
#    endif

#    ifneq ($(CXX),$(filter $(CXX),mpicxx mpic++))
      mpicxx_link_flags := $(shell mpicxx -link_info)
      LIBRARIES += $(filter -l%,$(mpicxx_link_flags))
#    endif

  else

    $(error Unknown mpi implementation.  You can try setting MPI stuff in amrex/Tools/GNUMake/Make.local and then compile with NO_MPI_CHECKING=TRUE.)

  endif

endif
endif
endif
endif
endif
endif

ifneq ($(NO_CUDA_CHECKING),TRUE)
ifeq ($(USE_CUDA),TRUE)
  CUDA_HOME ?= /usr/local/cuda

  COMPILE_CUDA_PATH = $(CUDA_HOME)
  SYSTEM_CUDA_PATH = $(CUDA_HOME)

  cuda_device_query_result := $(shell $(CUDA_HOME)/extras/demo_suite/deviceQuery | grep "CUDA Capability")
  ifneq ($(cuda_device_query_result),)
     TEMP_CUDA_ARCH = $(lastword $(cuda_device_query_result))
#      CUDA_ARCH = $(subst .,,$(TEMP_CUDA_ARCH))
     # We do this because pgfortran does not support all cuda arches.
     ifeq ($(TEMP_CUDA_ARCH),3.5)
         CUDA_ARCH = 35
     else
         CUDA_ARCH = $(firstword $(subst ., ,$(TEMP_CUDA_ARCH)))0
     endif
  endif
endif
endif

FIX_NVCC_PTHREAD=TRUE
