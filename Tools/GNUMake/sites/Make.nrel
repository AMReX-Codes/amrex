ifneq ($(which_computer),$(filter $(which_computer),merlin anymachine))
  $(error Unknown NREL computer, $(which_computer))
endif

os_type := $(shell uname)

# Use automatic CPU dispatch for max 
# vectorization with Intel compilers
# since Peregrine has haswell and
# ivybridge nodes. We're leaving out the
# really old sandybridge nodes here.
ifeq ($(COMP), intel)
  CXXFLAGS += -axCORE-AVX2,CORE-AVX-I
  CFLAGS   += -axCORE-AVX2,CORE-AVX-I
  FFLAGS   += -axCORE-AVX2,CORE-AVX-I
  F90FLAGS += -axCORE-AVX2,CORE-AVX-I
endif

ifeq ($(USE_MPI),TRUE)
  ifeq ($(COMP), intel)
    CXX := mpiicpc
    CC  := mpiicc
    FC  := mpiifort
    F90 := mpiifort
  else
    CXX := mpicxx
    CC  := mpicc
    FC  := mpif90
    F90 := mpif90
    ifneq ($(findstring mpich, $(shell $(F90) -show 2>&1)),)
      mpif90_link_flags := $(shell $(F90) -link_info)
      LIBRARIES += $(wordlist 2,1024,$(mpif90_link_flags))
    else ifneq ($(findstring Open MPI, $(shell $(F90) -showme:version 2>&1)),)
      mpif90_link_flags := $(shell $(F90) -showme:link)
      LIBRARIES += $(mpif90_link_flags)
    else
      $(error unknown mpi implementation)
    endif
  endif
endif
