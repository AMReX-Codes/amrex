#
# For NERSC machines: Cori and corigpu
#

NERSC_MACHINES := cori cgpu perlmutter

ifneq ($(which_computer),$(filter $(which_computer), ${NERSC_MACHINES}))
  $(error Unknown NERSC computer, $(which_computer))
endif

ifeq ($(which_computer),$(filter $(which_computer),perlmutter))

  ifdef PE_ENV
  ifneq ($(USE_CUDA),TRUE)
    lowercase_peenv := $(shell echo $(PE_ENV) | tr A-Z a-z)
    ifneq ($(lowercase_peenv),$(lowercase_comp))
      has_compiler_mismatch = COMP=$(COMP) does not match PrgEnv-$(lowercase_peenv)
    endif
  endif
  endif

  ifeq ($(USE_MPI),TRUE)
    ifneq ($(USE_CUDA),TRUE)
      CC  = cc
      CXX = CC
      FC  = ftn
      F90 = ftn
      LIBRARIES += -lmpichf90
    endif

#    For Reference --> getting cflags on Perlmutter.
#    includes += $(shell CC --cray-print-opts=cflags)
  endif

  ifeq ($(USE_CUDA),TRUE)
    CUDA_ARCH = 80

    comm := ,
    ifneq ($(BL_NO_FORT),TRUE)
        LIBRARIES += $(subst -Wl$(comm),-Xlinker=,$(shell ftn --cray-print-opts=libs))
    else
        LIBRARIES += $(subst -Wl$(comm),-Xlinker=,$(shell CC --cray-print-opts=libs))
    endif

    ifneq ($(CUDA_ROOT),)
        SYSTEM_CUDA_PATH := $(CUDA_ROOT)
        COMPILE_CUDA_PATH := $(CUDA_ROOT)
    else ifneq ($(CUDA_HOME),)
        SYSTEM_CUDA_PATH := $(CUDA_HOME)
        COMPILE_CUDA_PATH := $(CUDA_HOME)
    else ifneq ($(CUDA_PATH),)
        SYSTEM_CUDA_PATH := $(CUDA_PATH)
        COMPILE_CUDA_PATH := $(CUDA_PATH)
    else
        $(error No CUDA_ROOT nor CUDA_HOME nor CUDA_PATH found. Please load a cuda module.)
    endif

  endif

endif

ifeq ($(which_computer),$(filter $(which_computer),cori))

  ifdef PE_ENV
  ifneq ($(USE_CUDA),TRUE)
    lowercase_peenv := $(shell echo $(PE_ENV) | tr A-Z a-z)
    ifneq ($(lowercase_peenv),$(lowercase_comp))
      has_compiler_mismatch = COMP=$(COMP) does not match PrgEnv-$(lowercase_peenv)
    endif
  endif
  endif

  ifeq ($(USE_MPI),TRUE)
  ifeq ($(USE_CUDA),TRUE)
    $(error USE_CUDA is not allowed on the cori login nodes, please build from a cgpu node))
  else
    CC  = cc
    CXX = CC
    FC  = ftn
    F90 = ftn
    LIBRARIES += -lmpichf90
  endif
  endif

  ifeq ($(USE_SENSEI_INSITU),TRUE)
    CXXFLAGS += -fPIC -dynamic
    LIBRARIES += -ldl
  endif

endif

ifeq ($(which_computer),$(filter $(which_computer),cgpu))

  ifeq ($(USE_MPI),TRUE)

    CC  = mpicc
    CXX = mpic++
    FC  = mpif90
    F90 = mpif90

    ifneq ($(LINK_WITH_FORTRAN_COMPILER),TRUE)
      ifneq ($(findstring mvapich,$(shell mpif90 -show 2>&1 | tr A-Z a-z)),)
        cori_mvapich_link_flags := $(shell mpif90 -link_info)
        LIBRARIES += --compiler-options '-fPIC' $(wordlist 2,1024,$(filter-out -m64,$(filter-out -fPIC,$(cori_mvapich_link_flags))))
      else ifneq ($(findstring Open MPI, $(shell mpif90 -showme:version 2>&1)),)
        cori_openmpi_link_flags := $(shell mpif90 -showme:link)
        LIBRARIES += $(cori_openmpi_link_flags)
      endif
    endif

  endif

  ifeq ($(USE_CUDA),TRUE)

    FIX_NVCC_PTHREAD=TRUE

    ifneq ($(CUDA_ROOT),)
        SYSTEM_CUDA_PATH := $(CUDA_ROOT)
        COMPILE_CUDA_PATH := $(CUDA_ROOT)
    else ifneq ($(CUDA_HOME),)
        SYSTEM_CUDA_PATH := $(CUDA_HOME)
        COMPILE_CUDA_PATH := $(CUDA_HOME)
    endif

    ifeq ($(findstring :dgx, $(LOADEDMODULES)), :dgx)
      CUDA_ARCH = 80
    else
      CUDA_ARCH = 70
    endif
    GPUS_PER_NODE = 8
    GPUS_PER_SOCKET = 4
  endif

  ifeq ($(USE_SENSEI_INSITU),TRUE)
    CXXFLAGS += -fPIC -dynamic
    LIBRARIES += -ldl
  endif

endif
