name: Hypre

on: [push, pull_request]

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-hypre
  cancel-in-progress: true

jobs:
  compile-hypre-cuda-eb-2d:
    name: CUDA EB 2D Hypre@2.26.0
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Dependencies
      run: |
        .github/workflows/dependencies/dependencies_nvcc11.sh
        sudo apt-get install -y libcublas-dev-11-2 libcusparse-dev-11-2
        .github/workflows/dependencies/dependencies_ccache.sh
    - name: Set Up Cache
      uses: actions/cache@v3
      with:
        path: ~/.cache
        key: ccache-${{ github.workflow }}-${{ github.job }}-git-${{ github.sha }}
        restore-keys: |
             ccache-${{ github.workflow }}-${{ github.job }}-git-
    - name: Build Hypre
      run: |
        wget -q https://github.com/hypre-space/hypre/archive/refs/tags/v2.26.0.tar.gz
        tar xfz v2.26.0.tar.gz
        cd hypre-2.26.0/src
        ./configure --with-cxxstandard=17 --with-cuda --enable-unified-memory \
            --with-cuda-home=/usr/local/cuda --with-gpu-arch="80"
        make -j 2
        make install
        cd ../../
    - name: Compile Test
      run: |
        export CCACHE_COMPRESS=1
        export CCACHE_COMPRESSLEVEL=10
        export CCACHE_MAXSIZE=500M
        ccache -z

        export AMREX_HYPRE_HOME=${PWD}/hypre-2.26.0/src/hypre
        export AMREX_CUDA_ARCH=80
        export CUDA_PATH=/usr/local/cuda
        export PATH=${PATH}:/usr/local/cuda/bin
        cd Tests/LinearSolvers/CellEB
        make -j2 USE_MPI=TRUE USE_HYPRE=TRUE DIM=2 USE_CUDA=TRUE CCACHE=ccache

        ccache -s

  test-hypre-cpu-3d:
    name: GCC 3D Hypre@2.21.0
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Dependencies
      run: |
        .github/workflows/dependencies/dependencies.sh
        .github/workflows/dependencies/dependencies_clang-tidy.sh 14
        .github/workflows/dependencies/dependencies_ccache.sh
    - name: Set Up Cache
      uses: actions/cache@v3
      with:
        path: ~/.cache
        key: ccache-${{ github.workflow }}-${{ github.job }}-git-${{ github.sha }}
        restore-keys: |
             ccache-${{ github.workflow }}-${{ github.job }}-git-
    - name: Build Hypre
      run: |
        wget -q https://github.com/hypre-space/hypre/archive/refs/tags/v2.21.0.tar.gz
        tar xfz v2.21.0.tar.gz
        cd hypre-2.21.0/src
        ./configure --with-cxxstandard=17 --enable-bigint
        make -j 2
        make install
        cd ../../
    - name: Build and Run Test
      run: |
        export CCACHE_COMPRESS=1
        export CCACHE_COMPRESSLEVEL=10
        export CCACHE_MAXSIZE=125M
        ccache -z

        export AMREX_HYPRE_HOME=${PWD}/hypre-2.21.0/src/hypre
        cd Tests/LinearSolvers/ABecLaplacian_C
        make -j2 USE_MPI=TRUE USE_HYPRE=TRUE DIM=3 \
            USE_CLANG_TIDY=TRUE CLANG_TIDY=clang-tidy-14 CLANG_TIDY_WARN_ERROR=TRUE \
            CCACHE=ccache
        mpiexec -n 2 ./main3d.gnu.MPI.ex inputs.hypre

        ccache -s

  cache_eviction:
    name: Cache Eviction for ${{ github.workflow }}
    if: ${{ always() }}
    needs: [compile-hypre-cuda-eb-2d, test-hypre-cpu-3d]
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Clean up cache
        run: |
          gh extension install actions/gh-actions-cache

          WORKFLOW=${{ github.workflow }}
          REPO=${{ github.repository }}
          BRANCH=${{ github.ref }}

          ## Setting this to not fail the workflow while deleting cache keys.
          set +e

          MYJOBS="compile-hypre-cuda-eb-2d test-hypre-cpu-3d"
          for myjob in $MYJOBS
          do
            key_prefix="ccache-${WORKFLOW}-${myjob}-git-"
            old_keys=$(gh actions-cache list -R $REPO -B $BRANCH --key $key_prefix --sort last-used | cut -f 1 | tail -n +2)
            ## tail -n +2 keeps the last used key

            for key in $old_keys
            do
                gh actions-cache delete $key -R $REPO -B $BRANCH --confirm
            done
          done
          echo "Done"
