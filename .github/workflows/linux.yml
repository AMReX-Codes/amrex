# -Wextra-semi: GCC < 10 does not have this.
# -Wunreachable-code: GCC no longer has this option.
# -Wno-c++17-extensions: Clang complains about nodiscard if the standard is not set to c++17.

name: linux

on: [push, pull_request]

jobs:
  # Build and install libamrex as AMReX CMake project
  library:
    name: GNU@7.5 C++17 Release [lib]
    runs-on: ubuntu-18.04
    env: {CXXFLAGS: "-fno-operator-names -Werror -Wall -Wextra -Wpedantic -Wnull-dereference -Wfloat-conversion -Wshadow -Woverloaded-virtual"}
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        mkdir build
        cd build
        cmake ..                                  \
            -DAMReX_FORTRAN=ON                    \
            -DAMReX_PLOTFILE_TOOLS=ON             \
            -DCMAKE_VERBOSE_MAKEFILE=ON           \
            -DCMAKE_INSTALL_PREFIX=/tmp/my-amrex  \
            -DCMAKE_CXX_STANDARD=17
        make -j 2
        make install
        make test_install

        export PATH=/tmp/my-amrex/bin:$PATH
        which fcompare

  library_clang:
    name: Clang@6.0 C++14 SP NOMPI Debug [lib]
    runs-on: ubuntu-18.04
    env: {CXXFLAGS: "-fno-operator-names -Werror -Wall -Wextra -Wpedantic -Wnull-dereference -Wfloat-conversion -Wshadow -Woverloaded-virtual -Wextra-semi -Wunreachable-code -Wno-c++17-extensions"}
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_clang6.sh
    - name: Build & Install
      run: |
        mkdir build
        cd build
        cmake ..                        \
            -DCMAKE_BUILD_TYPE=Debug    \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DCMAKE_INSTALL_PREFIX=/tmp/my-amrex      \
            -DAMReX_FORTRAN=ON                        \
            -DAMReX_MPI=OFF                           \
            -DAMReX_PARTICLES=ON                      \
            -DAMReX_PLOTFILE_TOOLS=ON                 \
            -DAMReX_PRECISION=SINGLE                  \
            -DAMReX_PARTICLES_PRECISION=SINGLE        \
            -DCMAKE_CXX_STANDARD=14                   \
            -DCMAKE_C_COMPILER=$(which clang)         \
            -DCMAKE_CXX_COMPILER=$(which clang++)     \
            -DCMAKE_Fortran_COMPILER=$(which gfortran)
        make -j 2
        make install
        make test_install

        export PATH=/tmp/my-amrex/bin:$PATH
        which fcompare

  # Build libamrex and all tests
  tests_build:
    name: GNU@7.5 C++14 Debug Fortran [tests]
    runs-on: ubuntu-18.04
    env: {CXXFLAGS: "-fno-operator-names -Werror -Wall -Wextra -Wpedantic -Wnull-dereference -Wfloat-conversion -Wshadow -Woverloaded-virtual"}
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        mkdir build
        cd build
        cmake ..                        \
            -DCMAKE_BUILD_TYPE=Debug    \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DAMReX_ENABLE_TESTS=ON     \
            -DAMReX_FORTRAN=ON          \
            -DAMReX_PARTICLES=ON
        make -j 2

  test_sensei:
    name: SENSEI Adaptor [test]
    runs-on: ubuntu-18.04
    env:
      CXX: clang++
      CC: clang
      CXXFLAGS: "-Werror -Wshadow -Woverloaded-virtual -Wunreachable-code -fno-operator-names"
      CMAKE_GENERATOR: Ninja
      CMAKE_PREFIX_PATH: /root/install/sensei/develop/lib/cmake
    container:
      image: ryankrattiger/sensei:fedora33-vtk-mpi-20210616
    steps:
    - uses: actions/checkout@v2
    - name: Setup
      run: mkdir build
    - name: Configure
      run: |
        cd build
        cmake ..                  \
            -DCMAKE_BUILD_TYPE=Debug \
            -DAMReX_ENABLE_TESTS=ON  \
            -DAMReX_FORTRAN=OFF      \
            -DAMReX_PARTICLES=ON     \
            -DAMReX_SENSEI=ON        \
            -DCMAKE_CXX_STANDARD=14
    - name: Build
      run: |
        cd build
        cmake --build .

  # Build libamrex and all tests
  tests_cxx20:
    name: GNU@10.1 C++20 OMP [tests]
    runs-on: ubuntu-18.04
    env: {CXXFLAGS: "-fno-operator-names -Werror -Wall -Wextra -Wpedantic -Wnull-dereference -Wfloat-conversion -Wshadow -Woverloaded-virtual -Wextra-semi"}
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_gcc10.sh
    - name: Build & Install
      run: |
        mkdir build
        cd build
        cmake ..                        \
            -DCMAKE_BUILD_TYPE=Debug    \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DAMReX_ENABLE_TESTS=ON     \
            -DAMReX_FORTRAN=ON          \
            -DAMReX_OMP=ON              \
            -DAMReX_PARTICLES=ON        \
            -DCMAKE_CXX_STANDARD=20     \
            -DCMAKE_C_COMPILER=$(which gcc-10)              \
            -DCMAKE_CXX_COMPILER=$(which g++-10)            \
            -DCMAKE_Fortran_COMPILER=$(which gfortran-10)
        make -j 2

  tests_clang:
    name: Clang@6.0 C++14 SP Particles DP Mesh Debug [tests]
    runs-on: ubuntu-18.04
    env: {CXXFLAGS: "-fno-operator-names -Werror -Wall -Wextra -Wpedantic -Wnull-dereference -Wfloat-conversion -Wshadow -Woverloaded-virtual -Wextra-semi -Wunreachable-code -Wno-c++17-extensions"}
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_clang6.sh
    - name: Build & Install
      run: |
        mkdir build
        cd build
        cmake ..                                      \
            -DCMAKE_BUILD_TYPE=Debug                  \
            -DCMAKE_VERBOSE_MAKEFILE=ON               \
            -DAMReX_ENABLE_TESTS=ON                   \
            -DAMReX_FORTRAN=ON                        \
            -DAMReX_MPI=OFF                           \
            -DAMReX_PARTICLES=ON                      \
            -DAMReX_PRECISION=DOUBLE                  \
            -DAMReX_PARTICLES_PRECISION=SINGLE        \
            -DCMAKE_CXX_STANDARD=14                   \
            -DCMAKE_C_COMPILER=$(which clang)         \
            -DCMAKE_CXX_COMPILER=$(which clang++)     \
            -DCMAKE_Fortran_COMPILER=$(which gfortran)
        make -j 2

  # Build libamrex and all tests w/o MPI
  tests-nonmpi:
    name: GNU@7.5 C++14 NOMPI [tests]
    runs-on: ubuntu-18.04
    env: {CXXFLAGS: "-fno-operator-names -Werror -Wall -Wextra -Wpedantic -Wnull-dereference -Wfloat-conversion -Wshadow -Woverloaded-virtual"}
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        mkdir build
        cd build
        cmake ..                        \
            -DCMAKE_BUILD_TYPE=Debug    \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DAMReX_ENABLE_TESTS=ON     \
            -DAMReX_FORTRAN=ON          \
            -DAMReX_MPI=OFF             \
            -DAMReX_PARTICLES=ON
        make -j 2

  # Build libamrex and all tests
  tests-nofortran:
    name: GNU@7.5 C++14 w/o Fortran [tests]
    runs-on: ubuntu-18.04
    env: {CXXFLAGS: "-fno-operator-names -Werror -Wall -Wextra -Wpedantic -Wnull-dereference -Wfloat-conversion -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_nofortran.sh
    - name: Build & Install
      run: |
        mkdir build
        cd build
        cmake ..                        \
            -DCMAKE_BUILD_TYPE=Debug    \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DAMReX_ENABLE_TESTS=ON     \
            -DAMReX_FORTRAN=OFF         \
            -DAMReX_PARTICLES=ON        \
            -DAMReX_FORTRAN=OFF
        make -j 2

  # Build 1D libamrex with configure
  configure-1d:
    name: GNU@7.5 Release [configure 1D]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        ./configure --dim 1
        make -j2 XTRA_CXXFLAGS=-fno-operator-names
        make install

  # Build 2D libamrex with configure
  configure-2d:
    name: Clang@6.0 NOMPI Release [configure 2D]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_clang6.sh
    - name: Build & Install
      run: |
        ./configure --dim 2 --with-fortran no --comp llvm --with-mpi no
        make -j2 WARN_ALL=TRUE WARN_ERROR=TRUE XTRA_CXXFLAGS="-fno-operator-names -Wno-c++17-extensions"
        make install

  # Build 3D libamrex with configure
  configure-3d:
    name: GNU@7.5 Release [configure 3D]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        ./configure --dim 3 --enable-eb yes --enable-xsdk-defaults yes
        make -j2 WARN_ALL=TRUE WARN_ERROR=TRUE XTRA_CXXFLAGS=-fno-operator-names
        make install

  # Build 3D libamrex with single precision and tiny profiler
  configure-3d-single-tprof:
    name: GNU@7.5 Release [configure 3D]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        ./configure --dim 3 --enable-eb no --enable-xsdk-defaults no --single-precision yes --single-precision-particles yes --enable-tiny-profile yes
        make -j2 WARN_ALL=TRUE WARN_ERROR=TRUE XTRA_CXXFLAGS=-fno-operator-names
        make install

  # Build 3D libamrex debug omp build with configure
  configure-3d-omp-debug:
    name: GNU@7.5 OMP Debug [configure 3D]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        ./configure --dim 3 --enable-eb yes --enable-xsdk-defaults yes --with-omp yes --debug yes
        make -j2 WARN_ALL=TRUE WARN_ERROR=TRUE XTRA_CXXFLAGS=-fno-operator-names
        make install

  # Build Tools/Plotfile
  plotfile-tools:
    name: GNU Plotfile Tools [tools]
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        cd Tools/Plotfile
        make -j2 USE_MPI=FALSE USE_OMP=FALSE WARN_ALL=TRUE WARN_ERROR=TRUE XTRA_CXXFLAGS=-fno-operator-names

  # Build libamrex and run all tests
  tests_run:
    name: GNU@7.5 C++14 [tests]
    runs-on: ubuntu-18.04
    env: {CXXFLAGS: "-fno-operator-names -Werror -Wall -Wextra -Wpedantic -Wnull-dereference -Wfloat-conversion -Wshadow -Woverloaded-virtual -Wunreachable-code"}
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        mkdir build
        cd build
        cmake ..                        \
            -DAMReX_OMP=ON             \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DAMReX_ENABLE_TESTS=ON     \
            -DAMReX_PARTICLES=ON
        make -j 2
    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure -R
