name: linux

on: [push, pull_request]

jobs:
  # Build and install libamrex as AMReX CMake project
  library:
    name: GNU@7.5 C++17 Release [lib]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        mkdir build
        cd build
        cmake ..                                  \
            -DCMAKE_VERBOSE_MAKEFILE=ON           \
            -DCMAKE_INSTALL_PREFIX=/tmp/my-amrex  \
            -DCMAKE_CXX_STANDARD=17
        make -j 2
        make install

  library_clang:
    name: Clang@6.0 C++14 SP NOMPI Debug [lib]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_clang6.sh
    - name: Build & Install
      run: |
        mkdir build
        cd build
        cmake ..                        \
            -DCMAKE_BUILD_TYPE=Debug    \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DCMAKE_INSTALL_PREFIX=/tmp/my-amrex  \
            -DENABLE_MPI=OFF            \
            -DENABLE_PARTICLES=ON       \
            -DENABLE_DP=OFF             \
            -DENABLE_DP_PARTICLES=OFF   \
            -DCMAKE_CXX_STANDARD=14     \
            -DCMAKE_C_COMPILER=$(which clang)         \
            -DCMAKE_CXX_COMPILER=$(which clang++)     \
            -DCMAKE_Fortran_COMPILER=$(which gfortran)
        make -j 2
        make install

  # Build libamrex and all tutorials
  tutorials:
    name: GNU@7.5 C++14 [tutorials]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        mkdir build
        cd build
        cmake ..                        \
            -DCMAKE_BUILD_TYPE=Debug    \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DENABLE_TUTORIALS=ON       \
            -DENABLE_PARTICLES=ON
        make -j 2 tutorials

  # Build libamrex and all tutorials
  tutorials_cxx20:
    name: GNU@10.1 C++20 [tutorials]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_gcc10.sh
    - name: Build & Install
      run: |
        mkdir build
        cd build
        cmake ..                        \
            -DCMAKE_BUILD_TYPE=Debug    \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DENABLE_TUTORIALS=ON       \
            -DENABLE_PARTICLES=ON       \
            -DCMAKE_CXX_STANDARD=20     \
            -DCMAKE_C_COMPILER=$(which gcc-10)              \
            -DCMAKE_CXX_COMPILER=$(which g++-10)            \
            -DCMAKE_Fortran_COMPILER=$(which gfortran-10)
        make -j 2 tutorials

  # Build libamrex and all tutorials w/o MPI
  tutorials-nonmpi:
    name: GNU@7.5 C++14 NOMPI [tutorials]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        mkdir build
        cd build
        cmake ..                        \
            -DCMAKE_BUILD_TYPE=Debug    \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DENABLE_TUTORIALS=ON       \
            -DENABLE_MPI=OFF            \
            -DENABLE_PARTICLES=ON
        make -j 2 tutorials

  # Build libamrex and all tutorials
  tutorials-nofortran:
    name: GNU@7.5 C++11 w/o Fortran [tutorials]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_nofortran.sh
    - name: Build & Install
      run: |
        mkdir build
        cd build
        cmake ..                        \
            -DCMAKE_BUILD_TYPE=Debug    \
            -DCMAKE_VERBOSE_MAKEFILE=ON \
            -DENABLE_TUTORIALS=ON       \
            -DENABLE_PARTICLES=ON       \
            -DENABLE_FORTRAN=OFF        \
            -DCMAKE_CXX_STANDARD=11
        make -j 2 tutorials

  # Build libamrex and all tutorials with CUDA
  tutorials-cuda:
    name: CUDA@9.1.85 GNU@4.8.5 C++11 Release [tutorials]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_nvcc.sh
    - name: Build & Install
      run: |
        mkdir build
        cd build
        cmake ..                                         \
            -DCMAKE_VERBOSE_MAKEFILE=ON                  \
            -DENABLE_TUTORIALS=ON                        \
            -DENABLE_PARTICLES=ON                        \
            -DENABLE_CUDA=ON                             \
            -DCMAKE_C_COMPILER=$(which gcc-4.8)              \
            -DCMAKE_CXX_COMPILER=$(which g++-4.8)            \
            -DCMAKE_CUDA_HOST_COMPILER=$(which g++-4.8)      \
            -DCMAKE_Fortran_COMPILER=$(which gfortran-4.8)   \
            -DCUDA_ARCH=6.0
        make -j 2 tutorials

  tutorials-dpcpp:
    name: DPCPP@PubBeta GFortran@7.5 C++17 [tutorials]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_dpcpp.sh
    - name: Build & Install
      run: |
        set +e
        source /opt/intel/oneapi/setvars.sh
        set -e
        mkdir build
        cd build
        cmake ..                                           \
            -DCMAKE_VERBOSE_MAKEFILE=ON                    \
            -DENABLE_TUTORIALS=ON                          \
            -DENABLE_PARTICLES=ON                          \
            -DENABLE_DPCPP=ON                              \
            -DCMAKE_C_COMPILER=$(which clang)              \
            -DCMAKE_CXX_COMPILER=$(which dpcpp)            \
            -DCMAKE_Fortran_COMPILER=$(which gfortran)
        make -j 2 tutorials

  # Build 1D libamrex with configure
  configure-1d:
    name: GNU@7.5 Release [configure 1D]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        ./configure --dim 1
        make -j2
        make install

  # Build 2D libamrex with configure
  configure-2d:
    name: Clang@6.0 NOMPI Release [configure 2D]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies_clang6.sh
    - name: Build & Install
      run: |
        ./configure --dim 2 --with-fortran no --comp llvm --with-mpi no
        make -j2 WARN_ALL=TRUE WARN_ERROR=TRUE
        make install

  # Build 3D libamrex with configure
  configure-3d:
    name: GNU@7.5 Release [configure 3D]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        ./configure --dim 3 --enable-eb yes --enable-xsdk-defaults yes
        make -j2 WARN_ALL=TRUE WARN_ERROR=TRUE
        make install

  # Build 3D libamrex debug omp build with configure
  configure-3d-omp-debug:
    name: GNU@7.5 OMP Debug [configure 3D]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: .github/workflows/dependencies/dependencies.sh
    - name: Build & Install
      run: |
        ./configure --dim 3 --enable-eb yes --enable-xsdk-defaults yes --with-omp yes --debug yes
        make -j2 WARN_ALL=TRUE WARN_ERROR=TRUE
        make install
