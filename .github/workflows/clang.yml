# -Wno-c++17-extensions: Clang complains about nodiscard if the standard is not set to c++17.

name: LinuxClang

on: [push, pull_request]

concurrency:
  group: ${{ github.ref }}-${{ github.head_ref }}-linux-clang
  cancel-in-progress: true

permissions:
  actions: write
  contents: read
env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  # Build 2D libamrex with configure
  configure-2d:
    name: Clang NOMPI Release [configure 2D]
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Dependencies
      run: |
        .github/workflows/dependencies/dependencies_clang.sh 14
        .github/workflows/dependencies/dependencies_clang-tidy.sh 14
        .github/workflows/dependencies/dependencies_ccache.sh
    - name: Set Up Cache
      uses: actions/cache@v3
      with:
        path: ~/.cache
        key: ccache-${{ github.workflow }}-${{ github.job }}-git-${{ github.sha }}
        restore-keys: |
             ccache-${{ github.workflow }}-${{ github.job }}-git-
    - name: Build & Install
      run: |
        export CCACHE_COMPRESS=1
        export CCACHE_COMPRESSLEVEL=10
        export CCACHE_MAXSIZE=125M
        ccache -z

        ./configure --dim 2 --with-fortran no --comp llvm --with-mpi no
        make -j2 WARN_ALL=TRUE WARN_ERROR=TRUE XTRA_CXXFLAGS="-fno-operator-names" \
            CCACHE=ccache
        make install

        ccache -s

  cache_eviction:
    name: Cache Eviction for ${{ github.workflow }}
    if: ${{ always() }}
    needs: [configure-2d]
    runs-on: ubuntu-latest
    #permissions:
    #  actions: write
    #  contents: read
    #env:
    #  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: Clean up cache
        run: |
          gh extension install actions/gh-actions-cache

          WORKFLOW=${{ github.workflow }}
          REPO=${{ github.repository }}
          BRANCH=${{ github.ref }}

          ## Setting this to not fail the workflow while deleting cache keys.
          set +e

          MYJOBS="configure-2d"
          for myjob in $MYJOBS
          do
            key_prefix="ccache-${WORKFLOW}-${myjob}-git-"
            old_keys=$(gh actions-cache list -R $REPO -B $BRANCH --key $key_prefix --sort last-used | cut -f 1 | tail -n +2)
            ## tail -n +2 keeps the last used key

            for key in $old_keys
            do
                echo "actions-cache delete $key -R $REPO -B $BRANCH --confirm"
                gh actions-cache delete $key -R $REPO -B $BRANCH --confirm
            done
          done
          echo "Done"
