"""
This script rewrites the filelist.rst file autogenerated by breathe to organize the
files in the documentation's API into the same directory structure as their
counterparts in the ../../Src directory.

We are not going to include cpp files - doxygen assumes that functions are documented
in the header files, so that's what we'll assume here as well.

TODO: check if doxygen has generated the corresponding files and only print their
names if so
TODO: don't make a _files.rst file if the subdir contains no doxygen-erated files
"""

import os
import re


def generate_filelist(rootdir, outfile, output_data, subdir_prefix=""):
    for subdir in sorted(os.listdir(rootdir)):
        if not os.path.isdir(os.path.join(rootdir, subdir)):
            # found a file
            if (subdir[-4:] != ".F90" and subdir[-4:] != ".f90" and subdir[-2:] != ".H" or subdir[-3:] == "F.H"):
                continue

            rst_name = re.sub("_", "__", subdir)
            rst_name = re.sub("\.", "_8", rst_name)

            output_data += """file/{}
   """.format(rst_name)

        else:
            # found a subdirectory - create a new _files.rst file and call
            # generate_filelist on the subdir

            # ignore F_Interfaces
            if subdir.lower() in ['f_interfaces']:
                continue

            output_data += """{}_files
   """.format(subdir_prefix + subdir)

            subdir_file_name = "source/{}_files.rst".format(
                subdir_prefix + subdir)

            with open(subdir_file_name, 'w') as subdir_file:

                subdir_output_data = "{}\n".format(subdir.capitalize())
                subdir_output_data += "=" * len(subdir)
                subdir_output_data += """

.. toctree::
   :maxdepth: 3

   """
                generate_filelist(os.path.join(rootdir, subdir), subdir_file,
                                  subdir_output_data,
                                  subdir_prefix=subdir_prefix + subdir + '_')

    outfile.write(output_data)


if __name__ == "__main__":

    # directory of the source files
    rootdir = "../../Src"

    outfile_path = "source/filelist.rst"

    with open(outfile_path, 'w') as outfile:

        output_data = """File list
=========

.. toctree::
   :maxdepth: 3

   """

        generate_filelist(rootdir, outfile, output_data)
