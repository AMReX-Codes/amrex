AMREX_HOME ?= ../../../BoxLib
PICSAR_HOME ?= ../../../picsar
OPENBC_HOME ?= ../../../openbc_poisson

USE_PARTICLES = TRUE

include $(AMREX_HOME)/Tools/C_mk/Make.defs

ifndef USE_PYTHON_MAIN
  USE_PYTHON_MAIN = FALSE
endif

ifeq ($(USE_PYTHON_MAIN),TRUE)
  CXXFLAGS += -fPIC
  CFLAGS   += -fPIC
  FFLAGS   += -fPIC
  F90FLAGS += -fPIC
  USERSuffix = .Lib
endif

-include Make.package
include $(WARPX_HOME)/Source/Make.package

include $(AMREX_HOME)/Src/C_BaseLib/Make.package
include $(AMREX_HOME)/Src/C_ParticleLib/Make.package
include $(AMREX_HOME)/Src/C_BoundaryLib/Make.package
include $(AMREX_HOME)/Src/C_AmrCoreLib/Make.package

include $(PICSAR_HOME)/src/Make.package

ifeq ($(USE_OPENBC_POISSON),TRUE)
  include $(OPENBC_HOME)/Make.package
  DEFINES += -DFFT_FFTW -DMPIPARALLEL -DUSE_OPENBC_POISSON
endif

# job_info support
CEXE_sources += buildInfo.cpp
CEXE_headers += $(AMREX_HOME)/Tools/C_scripts/buildInfo.H
INCLUDE_LOCATIONS += $(AMREX_HOME)/Tools/C_scripts

ifeq ($(USE_PYTHON_MAIN),TRUE)

ifeq ($(shell uname),Darwin)
  SHARED_OPTION = -dynamiclib
  MY_LINK_LIBRARIES = $(LDFLAGS) $(libraries)
else
  SHARED_OPTION = -shared
  MY_LINK_LIBRARIES =
endif

libwarpx.so: $(objForExecs)
	@echo Making dynamic library $@ ...
	$(SILENT) $(CXX) $(SHARED_OPTION) -fPIC -o $@ $^ $(MY_LINK_LIBRARIES)
	$(SILENT) $(RM) buildInfo.cpp
	@echo SUCCESS

else

all: $(executable) 
	$(SILENT) $(RM) buildInfo.cpp
	@echo SUCCESS

endif

clean::
	$(SILENT) $(RM) libwarpx.so

buildInfo.cpp: 
	$(AMREX_HOME)/Tools/C_scripts/makebuildinfo_C.py \
          --boxlib_home "$(AMREX_HOME)" \
          --COMP "$(COMP)" --COMP_VERSION "$(COMP_VERSION)" \
          --FCOMP "$(FCOMP)" --FCOMP_VERSION "$(FCOMP_VERSION)" \
          --GIT ". $(AMREX_HOME) $(PICSAR_HOME)"

include $(AMREX_HOME)/Tools/C_mk/Make.rules

clean::
	$(SILENT) $(RM) buildInfo.cpp
