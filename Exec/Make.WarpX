BOXLIB_HOME ?= ../../../BoxLib
PICSAR_HOME ?= ../../../picsar
OPENBC_HOME ?= ../../../openbc_poisson

USE_PARTICLES = TRUE

include $(BOXLIB_HOME)/Tools/C_mk/Make.defs

ifndef USE_PYTHON_MAIN
  USE_PYTHON_MAIN = FALSE
endif

ifeq ($(USE_PYTHON_MAIN),TRUE)
  CXXFLAGS += -fPIC
  CFLAGS   += -fPIC
  FFLAGS   += -fPIC
  F90FLAGS += -fPIC
  USERSuffix = .Lib
endif

-include Make.package
include $(WARPX_HOME)/Source/Make.package

include $(BOXLIB_HOME)/Src/C_BaseLib/Make.package
include $(BOXLIB_HOME)/Src/C_ParticleLib/Make.package
include $(BOXLIB_HOME)/Src/C_BoundaryLib/Make.package
include $(BOXLIB_HOME)/Src/C_AmrCoreLib/Make.package

include $(PICSAR_HOME)/src/Make.package

ifeq ($(USE_OPENBC_POISSON),TRUE)
  include $(OPENBC_HOME)/Make.package
  DEFINES += -DFFT_FFTW -DMPIPARALLEL -DUSE_OPENBC_POISSON
endif

# job_info support
CEXE_sources += buildInfo.cpp
CEXE_headers += $(BOXLIB_HOME)/Tools/C_scripts/buildInfo.H
INCLUDE_LOCATIONS += $(BOXLIB_HOME)/Tools/C_scripts

ifeq ($(USE_PYTHON_MAIN),TRUE)

ifeq ($(shell uname),Darwin)
  SHARED_OPTION = -dynamiclib
  MY_LINK_LIBRARIES = $(LDFLAGS) $(libraries)
else
  SHARED_OPTION = -shared
  MY_LINK_LIBRARIES = $(LDFLAGS) $(libraries) -lgfortran
endif

pyinstall: libwarpx.a
	@echo Making and installing python wrapper ...
	LDFLAGS="$(MY_LINK_LIBRARIES)" CC=$(CXX) CXXFLAGS="$(CXXFLAGS) $(DEFINES)" python setup.py install
	@echo SUCCESS

pybuild: libwarpx.a
	@echo Making python wrapper ...
	LDFLAGS="$(MY_LINK_LIBRARIES)" CC=$(CXX) CXXFLAGS="$(CXXFLAGS) $(DEFINES)" python setup.py build
	@echo SUCCESS

libwarpx.a: $(objForExecs)
	@echo Making static library $@ ...
	$(SILENT) $(AR) -crv $@ $^
	@echo SUCCESS

libwarpx.so: $(objForExecs)
	@echo Making dynamic library $@ ...
	$(SILENT) $(CXX) $(SHARED_OPTION) -fPIC -o $@ $^ $(MY_LINK_LIBRARIES)
	$(SILENT) $(RM) buildInfo.cpp
	@echo SUCCESS

clean::
	$(SILENT) $(RM) -rf build
	$(SILENT) $(RM) libwarpx.a
	$(SILENT) $(RM) libwarpx.so

else

all: $(executable) 
	$(SILENT) $(RM) buildInfo.cpp
	@echo SUCCESS

endif

buildInfo.cpp: 
	$(BOXLIB_HOME)/Tools/C_scripts/makebuildinfo_C.py \
          --boxlib_home "$(BOXLIB_HOME)" \
          --COMP "$(COMP)" --COMP_VERSION "$(COMP_VERSION)" \
          --FCOMP "$(FCOMP)" --FCOMP_VERSION "$(FCOMP_VERSION)" \
          --GIT ". $(BOXLIB_HOME) $(PICSAR_HOME)"

include $(BOXLIB_HOME)/Tools/C_mk/Make.rules

clean::
	$(SILENT) $(RM) buildInfo.cpp
