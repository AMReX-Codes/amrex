BOXLIB_HOME ?= ../../../BoxLib
PICSAR_HOME ?= ../../../picsar

USE_PARTICLES = TRUE

include $(BOXLIB_HOME)/Tools/C_mk/Make.defs

ifndef USE_PYTHON_MAIN
  USE_PYTHON_MAIN = FALSE
endif

ifeq ($(USE_PYTHON_MAIN),TRUE)
  CXXFLAGS += -fPIC
  CFLAGS   += -fPIC
  fFLAGS   += -fPIC
  FFLAGS   += -fPIC
  USERSuffix = Lib
endif

-include Make.package
include $(WARPX_HOME)/Source/Make.package

include $(BOXLIB_HOME)/Src/C_BaseLib/Make.package
include $(BOXLIB_HOME)/Src/C_ParticleLib/Make.package
include $(BOXLIB_HOME)/Src/C_BoundaryLib/Make.package
include $(BOXLIB_HOME)/Src/C_AmrCoreLib/Make.package

include $(PICSAR_HOME)/src/Make.package

ifeq ($(USE_PYTHON_MAIN),TRUE)

libwarpx.so: $(objForExecs)
	@echo Making shared library $@ ...
	$(SILENT) $(CXX) -shared -o $@ $^
	$(SILENT) $(RM) buildInfo.cpp
	@echo SUCCESS

else

all: $(executable) 
	$(SILENT) $(RM) buildInfo.cpp
	@echo SUCCESS

endif

clean::
	$(SILENT) $(RM) libwarpx.so

# job_info support
CEXE_sources += buildInfo.cpp
CEXE_headers += $(BOXLIB_HOME)/Tools/C_scripts/buildInfo.H
INCLUDE_LOCATIONS += $(BOXLIB_HOME)/Tools/C_scripts

buildInfo.cpp: 
	$(BOXLIB_HOME)/Tools/C_scripts/makebuildinfo_C.py \
          --boxlib_home "$(BOXLIB_HOME)" \
          --COMP "$(COMP)" --COMP_VERSION "$(COMP_VERSION)" \
          --FCOMP "$(FCOMP)" --FCOMP_VERSION "$(FCOMP_VERSION)" \
          --GIT ". $(BOXLIB_HOME) $(PICSAR_HOME)"

include $(BOXLIB_HOME)/Tools/C_mk/Make.rules

clean::
	$(SILENT) $(RM) buildInfo.cpp
