This tutorial demonstrates how to call the standard functions needed for a PIC solver --
after setting up the mesh and initializing the particles, we first "deposit" the particles' 
mass onto the mesh, then we solve for the field on the mesh, interpolate the field back to the 
particles, and finally move the particles.

The default settings in the GNUmakefile use the GNU C++ and Fortran compilers (gcc, gfortran).
We have set DEBUG=FALSE which means you will build the optimized version.   Currently this
code will build with MPI enabled (USE_MPI=TRUE) but not with OpenMP (USE_OMP = FALSE).

The size of the problem is set in the inputs file; there are comments there describing the
variables.

Timers are set up for each of those main components, so the output from a single-level
run may look like:

*********************************************

MPI initialized with 1 MPI processes
                              
Number of levels             : 1
Number of particles per cell : 10
Size of domain               : 128 128 128
Number of boxes              : 64

Total number of particles    : 20971520

Time in InitRandom   : 5.790934563
Time in AssignDensity: 2.292661667
Time in Solve        : 5.790934563
Time in moveKick     : 5.790934563
Total Time           : 12.7389164


*********************************************

