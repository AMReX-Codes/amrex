ifneq ($(USE_PYTHON_MAIN),TRUE)
  CEXE_sources += main.cpp
else
  CEXE_sources += WarpXWrappers.cpp
  CEXE_headers += WarpXWrappers.h               
endif

CEXE_sources += WarpX_py.cpp

CEXE_sources += WarpX.cpp WarpXInitData.cpp WarpXEvolve.cpp WarpXIO.cpp WarpXProb.cpp WarpXRegrid.cpp
CEXE_sources += WarpXTagging.cpp WarpXComm.cpp WarpXMove.cpp WarpXBoostedFrameDiagnostic.cpp

CEXE_sources += ParticleIO.cpp
CEXE_sources += ParticleContainer.cpp WarpXParticleContainer.cpp PhysicalParticleContainer.cpp LaserParticleContainer.cpp RigidInjectedParticleContainer.cpp

CEXE_headers += WarpX_py.H

CEXE_headers += WarpX.H WarpX_f.H WarpXConst.H WarpXBoostedFrameDiagnostic.H
CEXE_sources += WarpXConst.cpp

CEXE_headers += ParticleContainer.H WarpXParticleContainer.H PhysicalParticleContainer.H LaserParticleContainer.H RigidInjectedParticleContainer.H

CEXE_headers += PlasmaInjector.H
CEXE_sources += PlasmaInjector.cpp CustomDensityProb.cpp CustomMomentumProb.cpp

CEXE_sources += WarpXPML.cpp WarpXUtil.cpp
CEXE_headers += WarpXPML.H WarpXUtil.H

F90EXE_sources += WarpX_f.F90 WarpX_picsar.F90 WarpX_laser.F90 WarpX_pml.F90 WarpX_electrostatic.F90
F90EXE_sources += WarpX_boosted_frame.F90 WarpX_filter.F90 WarpX_parser.F90

ifeq ($(USE_OPENBC_POISSON),TRUE)
  F90EXE_sources += openbc_f.F90
endif

ifeq ($(USE_PSATD),TRUE)
  CEXE_sources += WarpXFFT.cpp
  F90EXE_sources += WarpX_fft.F90
endif

ifeq ($(DO_ELECTROSTATIC),TRUE)
  CEXE_sources += WarpXElectrostatic.cpp
endif

INCLUDE_LOCATIONS += $(WARPX_HOME)/Source
VPATH_LOCATIONS   += $(WARPX_HOME)/Source
